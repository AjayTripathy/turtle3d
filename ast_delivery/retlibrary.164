def boardWidth = 20
def boardHeight = 12
def shotRange = 3

def False = 0
def True = 1

def _getIterator_(list) {
    def q = 0-1
    def l = len(list)
    if (list[0] == null){
      list = keys(list)
    }
    return lambda() {
         q = q + 1
         if (q < l) {
            return list[q]
         } else { 
              return null 
         } # terminates iteration
    }
}

# returns the distance between ship1 and ship2
def dist(ship1, ship2) {
    return sqrt((ship1.x - ship2.x)^2 + (ship1.y - ship2.y)^2)
}

# returns the closest hostile ship to myShip or False if there are no hostiles remaining
def closestHostile(myShip, gameState) {
    def closest = False
    for (ship in gameState.shipList) {
        if (ship.faction == 'hostile') {
            if (closest == False) {
                closest = ship
            } else {
                if (dist(myShip, ship) < dist(myShip, closest)) {
                    closest = ship
                }
            }
        }
    }
    return closest
}

# returns the ship at coordinate x, y or else False if no ship is there
def checkCoord(x, y, gameState) {
    def returnShip = False
    for (ship in gameState.shipList) {
        if (ship.x == x && ship.y == y) {
            returnShip = ship
        }
    }
    return returnShip
}

def attack(myShip, enemyShip, gameState) {
    if (myShip.x == enemyShip.x) { # same x axis
        if (myShip.y < enemyShip.y) { # myShip above enemyShip
            if (enemyShip.y - myShip.y > 4) { # out of range -> move down twice
                    move(myShip.id, 'down')
                    move(myShip.id, 'down')
            } else {
                if (enemyShip.y - myShip.y == 4) { # at dist 4 -> move down once, shoot down once
                        move(myShip.id, 'down')
                        shoot(myShip.id, 'down')
                } else { # in range -> shoot down once
                    shoot(myShip.id,'down')
                }
            }
        } else { # myShip below enemyShip
            if (myShip.y - enemyShip.y > 4) { # out of range -> move up twice
                move(myShip.id, 'up')
                move(myShip.id, 'up')
            } else {
                if (myShip.y - enemyShip.y == 4) { # at dist 4 -> move up once, shoot up once
                        move(myShip.id, 'up')
                        shoot(myShip.id, 'up')
                } else { # in range -> shoot up once
                    shoot(myShip.id, 'up')
                }
            }
        }
    } else {
        if (myShip.y == enemyShip.y) { # same y axis
            if (myShip.x < enemyShip.x) { # myShip left of enemyShip
                if (enemyShip.x - myShip.x > 4) { # out of range -> move right twice
                    move(myShip.id, 'right')
                    move(myShip.id, 'right')
                } else {
                    if (enemyShip.x - myShip.x == 4) { # at dist 4 -> move right once, shoot right once
                        move(myShip.id, 'right')
                        shoot(myShip.id, 'right')
                    } else { # in range -> shoot right once
                        shoot(myShip.id, 'right')
                    }
                }
            } else { # myShip right of enemyShip
                if (myShip.x - enemyShip.x > 4) { # out of range -> move left twice
                    move(myShip.id, 'left')
                    move(myShip.id, 'left')
                } else {
                    if (myShip.x - enemyShip.x == 4) { # at dist 4 -> move left once, shoot left once
                        move(myShip.id, 'left')
                        shoot(myShip.id, 'left')
                    } else { # in range -> shoot left once
                        shoot(myShip.id, 'left')
                    }
                }
            }
        } else { # myShip tries to get onto same x axis as enemyShip
            if (myShip.x < enemyShip.x) {
                if (myShip.x < enemyShip.x-1) {
                    move(myShip.id, 'right')
                    move(myShip.id, 'right')
                } else {
                    move(myShip.id, 'right')
                }
            } else {
                if (myShip.x > enemyShip.x+1) {
                    move(myShip.id, 'left')
                    move(myShip.id, 'left')
                } else {
                    move(myShip.id, 'left')
                }
            }
        }
    }
}
